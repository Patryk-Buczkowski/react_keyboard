{"version":3,"sources":["App.tsx","index.tsx"],"names":["Key","state","paragraph","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAMMA,E,4MACJC,MAAQ,CACNC,UAAW,I,EAWbC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZH,UAAWE,EAAME,O,uDAVrB,WACEC,SAASC,iBAAiB,QAASC,KAAKN,e,kCAG1C,WACEI,SAASG,oBAAoB,QAASD,KAAKN,e,oBAS7C,WACE,IAAQD,EAAcO,KAAKR,MAAnBC,UAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACiB,KAAdT,EACG,0BADH,mCAE+BA,EAF/B,a,GAzBOU,IAAMC,WAkCXC,EAAgB,kBAAM,cAAC,EAAD,CAAKZ,UAAU,M,MCnClDa,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.1e3631b3.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  paragraph: string;\n};\n\nclass Key extends React.Component<State> {\n  state = {\n    paragraph: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({\n      paragraph: event.key,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { paragraph } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {paragraph === ''\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${paragraph}]`}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const App: React.FC = () => <Key paragraph=\"\" />;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}